(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
var api_common = require('./proto/api_common');   
var get_kLine = require('./proto/get_kLine');   
var get_lastPrice = require('./proto/get_lastPrice');   
var get_snapshot = require('./proto/get_snapshot');   
var get_status = require('./proto/get_status');   
var get_transaction = require('./proto/get_transaction');   
var get_trend = require('./proto/get_trend');   
var list_commodity = require('./proto/list_commodity');   
var list_contract = require('./proto/list_contract');   
var list_exchange=require('./proto/list_exchange');
var sub_unsub = require('./proto/sub_unsub');
module.exports = {    
    api_common: api_common ,
    get_kLine:get_kLine,
    get_lastPrice:get_lastPrice,
    get_snapshot:get_snapshot,
    get_status:get_status,
    get_transaction:get_transaction,
    get_trend:get_trend,
    list_commodity:list_commodity,
    list_contract:list_contract,
    list_exchange:list_exchange,
    sub_unsub:sub_unsub
} 
},{"./proto/api_common":2,"./proto/get_kLine":3,"./proto/get_lastPrice":4,"./proto/get_snapshot":5,"./proto/get_status":6,"./proto/get_transaction":7,"./proto/get_trend":8,"./proto/list_commodity":9,"./proto/list_contract":10,"./proto/list_exchange":11,"./proto/sub_unsub":12}],2:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.BizResult');
goog.provide('proto.quotation.api.ContractKey');
goog.provide('proto.quotation.api.Result');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.Result = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.Result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.Result.displayName = 'proto.quotation.api.Result';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.Result.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.Result.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.Result} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.Result.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultmessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.Result}
 */
proto.quotation.api.Result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.Result;
  return proto.quotation.api.Result.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.Result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.Result}
 */
proto.quotation.api.Result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.quotation.api.BizResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.Result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.Result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.Result} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.Result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional BizResult result = 1;
 * @return {!proto.quotation.api.BizResult}
 */
proto.quotation.api.Result.prototype.getResult = function() {
  return /** @type {!proto.quotation.api.BizResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.quotation.api.BizResult} value */
proto.quotation.api.Result.prototype.setResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string resultMessage = 2;
 * @return {string}
 */
proto.quotation.api.Result.prototype.getResultmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.Result.prototype.setResultmessage = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ContractKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.ContractKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ContractKey.displayName = 'proto.quotation.api.ContractKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ContractKey.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ContractKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ContractKey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ContractKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.ContractKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ContractKey;
  return proto.quotation.api.ContractKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ContractKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.ContractKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ContractKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ContractKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ContractKey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ContractKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.ContractKey.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.ContractKey.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.ContractKey.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ContractKey.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.ContractKey.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ContractKey.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.ContractKey.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ContractKey.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.quotation.api.BizResult = {
  KNOERROR: 0,
  KHASNODATA: 1,
  KNOTSUPPORTED: 2,
  KERRORREQUEST: 3,
  KREPEATEDSUB: 4,
  KHASNOTSUB: 5,
  KUNKNOWNERROR: 6
};


},{}],3:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.GetKLineRequest');
goog.provide('proto.quotation.api.GetKLineResponse');
goog.provide('proto.quotation.api.KLineData');
goog.provide('proto.quotation.api.KLineType');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetKLineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.GetKLineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetKLineRequest.displayName = 'proto.quotation.api.GetKLineRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetKLineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetKLineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetKLineRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetKLineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    begintime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 7, ""),
    count: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetKLineRequest}
 */
proto.quotation.api.GetKLineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetKLineRequest;
  return proto.quotation.api.GetKLineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetKLineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetKLineRequest}
 */
proto.quotation.api.GetKLineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 5:
      var value = /** @type {!proto.quotation.api.KLineType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBegintime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetKLineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetKLineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetKLineRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetKLineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getBegintime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeFixed32(
      8,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.GetKLineRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.GetKLineRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.GetKLineRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.GetKLineRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional KLineType type = 5;
 * @return {!proto.quotation.api.KLineType}
 */
proto.quotation.api.GetKLineRequest.prototype.getType = function() {
  return /** @type {!proto.quotation.api.KLineType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.quotation.api.KLineType} value */
proto.quotation.api.GetKLineRequest.prototype.setType = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string beginTime = 6;
 * @return {string}
 */
proto.quotation.api.GetKLineRequest.prototype.getBegintime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineRequest.prototype.setBegintime = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string endTime = 7;
 * @return {string}
 */
proto.quotation.api.GetKLineRequest.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineRequest.prototype.setEndtime = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional fixed32 count = 8;
 * @return {number}
 */
proto.quotation.api.GetKLineRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.quotation.api.GetKLineRequest.prototype.setCount = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.KLineData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.KLineData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.KLineData.displayName = 'proto.quotation.api.KLineData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.KLineData.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.KLineData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.KLineData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.KLineData.toObject = function(includeInstance, msg) {
  var f, obj = {
    openprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    highprice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    lowprice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    closeprice: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 5, 0),
    openinterest: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.KLineData}
 */
proto.quotation.api.KLineData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.KLineData;
  return proto.quotation.api.KLineData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.KLineData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.KLineData}
 */
proto.quotation.api.KLineData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpenprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCloseprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpeninterest(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.KLineData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.KLineData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.KLineData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.KLineData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getHighprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLowprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getCloseprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      5,
      f
    );
  }
  f = message.getOpeninterest();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional double openPrice = 1;
 * @return {number}
 */
proto.quotation.api.KLineData.prototype.getOpenprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.KLineData.prototype.setOpenprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double highPrice = 2;
 * @return {number}
 */
proto.quotation.api.KLineData.prototype.getHighprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.quotation.api.KLineData.prototype.setHighprice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double lowPrice = 3;
 * @return {number}
 */
proto.quotation.api.KLineData.prototype.getLowprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.quotation.api.KLineData.prototype.setLowprice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double closePrice = 4;
 * @return {number}
 */
proto.quotation.api.KLineData.prototype.getCloseprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.quotation.api.KLineData.prototype.setCloseprice = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional fixed64 volume = 5;
 * @return {number}
 */
proto.quotation.api.KLineData.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.quotation.api.KLineData.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 openInterest = 6;
 * @return {number}
 */
proto.quotation.api.KLineData.prototype.getOpeninterest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.quotation.api.KLineData.prototype.setOpeninterest = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string timestamp = 7;
 * @return {string}
 */
proto.quotation.api.KLineData.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.quotation.api.KLineData.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetKLineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetKLineResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetKLineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetKLineResponse.displayName = 'proto.quotation.api.GetKLineResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetKLineResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetKLineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetKLineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetKLineResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetKLineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    listklinedataList: jspb.Message.toObjectList(msg.getListklinedataList(),
    proto.quotation.api.KLineData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetKLineResponse}
 */
proto.quotation.api.GetKLineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetKLineResponse;
  return proto.quotation.api.GetKLineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetKLineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetKLineResponse}
 */
proto.quotation.api.GetKLineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = /** @type {!proto.quotation.api.KLineType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = new proto.quotation.api.KLineData;
      reader.readMessage(value,proto.quotation.api.KLineData.deserializeBinaryFromReader);
      msg.addListklinedata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetKLineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetKLineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetKLineResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetKLineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getListklinedataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.quotation.api.KLineData.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.GetKLineResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.GetKLineResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.GetKLineResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.GetKLineResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.GetKLineResponse.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineResponse.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.GetKLineResponse.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineResponse.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.GetKLineResponse.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineResponse.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.GetKLineResponse.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.GetKLineResponse.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional KLineType type = 6;
 * @return {!proto.quotation.api.KLineType}
 */
proto.quotation.api.GetKLineResponse.prototype.getType = function() {
  return /** @type {!proto.quotation.api.KLineType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.quotation.api.KLineType} value */
proto.quotation.api.GetKLineResponse.prototype.setType = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * repeated KLineData listKLineData = 7;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.KLineData>}
 */
proto.quotation.api.GetKLineResponse.prototype.getListklinedataList = function() {
  return /** @type{!Array.<!proto.quotation.api.KLineData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.KLineData, 7));
};


/** @param {!Array.<!proto.quotation.api.KLineData>} value */
proto.quotation.api.GetKLineResponse.prototype.setListklinedataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.quotation.api.KLineData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.KLineData}
 */
proto.quotation.api.GetKLineResponse.prototype.addListklinedata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.quotation.api.KLineData, opt_index);
};


proto.quotation.api.GetKLineResponse.prototype.clearListklinedataList = function() {
  this.setListklinedataList([]);
};


/**
 * @enum {number}
 */
proto.quotation.api.KLineType = {
  KMINUTE: 0,
  KDAY: 1,
  K5MINUTE: 2,
  K15MINUTE: 3,
  K30MINUTE: 4,
  K1HOUR: 5,
  K2HOUR: 6,
	K3HOUR: 7,
	K4HOUR: 8,
	KWEEK: 9,
	KMONTH: 10,
	K3MINUTE: 11,
	K10MINUTE: 12,
};


},{}],4:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.GetLastPriceRequest');
goog.provide('proto.quotation.api.GetLastPriceResponse');
goog.provide('proto.quotation.api.LastPrice');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.ContractKey');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetLastPriceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetLastPriceRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetLastPriceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetLastPriceRequest.displayName = 'proto.quotation.api.GetLastPriceRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetLastPriceRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetLastPriceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetLastPriceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetLastPriceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetLastPriceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetLastPriceRequest}
 */
proto.quotation.api.GetLastPriceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetLastPriceRequest;
  return proto.quotation.api.GetLastPriceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetLastPriceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetLastPriceRequest}
 */
proto.quotation.api.GetLastPriceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetLastPriceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetLastPriceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetLastPriceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetLastPriceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.GetLastPriceRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.GetLastPriceRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.GetLastPriceRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.GetLastPriceRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.LastPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.LastPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.LastPrice.displayName = 'proto.quotation.api.LastPrice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.LastPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.LastPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.LastPrice} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.LastPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastprice: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.LastPrice}
 */
proto.quotation.api.LastPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.LastPrice;
  return proto.quotation.api.LastPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.LastPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.LastPrice}
 */
proto.quotation.api.LastPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastprice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.LastPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.LastPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.LastPrice} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.LastPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastprice();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      7,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.LastPrice.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.LastPrice.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.LastPrice.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.LastPrice.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.LastPrice.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.LastPrice.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.LastPrice.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.LastPrice.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.LastPrice.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.LastPrice.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.LastPrice.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.LastPrice.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double lastPrice = 6;
 * @return {number}
 */
proto.quotation.api.LastPrice.prototype.getLastprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.quotation.api.LastPrice.prototype.setLastprice = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional fixed64 volume = 7;
 * @return {number}
 */
proto.quotation.api.LastPrice.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.quotation.api.LastPrice.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string timestamp = 8;
 * @return {string}
 */
proto.quotation.api.LastPrice.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.quotation.api.LastPrice.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetLastPriceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetLastPriceResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetLastPriceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetLastPriceResponse.displayName = 'proto.quotation.api.GetLastPriceResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetLastPriceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetLastPriceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetLastPriceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetLastPriceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetLastPriceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listlastpriceList: jspb.Message.toObjectList(msg.getListlastpriceList(),
    proto.quotation.api.LastPrice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetLastPriceResponse}
 */
proto.quotation.api.GetLastPriceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetLastPriceResponse;
  return proto.quotation.api.GetLastPriceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetLastPriceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetLastPriceResponse}
 */
proto.quotation.api.GetLastPriceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.LastPrice;
      reader.readMessage(value,proto.quotation.api.LastPrice.deserializeBinaryFromReader);
      msg.addListlastprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetLastPriceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetLastPriceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetLastPriceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetLastPriceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListlastpriceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.LastPrice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LastPrice listLastPrice = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.LastPrice>}
 */
proto.quotation.api.GetLastPriceResponse.prototype.getListlastpriceList = function() {
  return /** @type{!Array.<!proto.quotation.api.LastPrice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.LastPrice, 1));
};


/** @param {!Array.<!proto.quotation.api.LastPrice>} value */
proto.quotation.api.GetLastPriceResponse.prototype.setListlastpriceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.LastPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.LastPrice}
 */
proto.quotation.api.GetLastPriceResponse.prototype.addListlastprice = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.LastPrice, opt_index);
};


proto.quotation.api.GetLastPriceResponse.prototype.clearListlastpriceList = function() {
  this.setListlastpriceList([]);
};



},{}],5:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.GetSnapshotRequest');
goog.provide('proto.quotation.api.GetSnapshotResponse');
goog.provide('proto.quotation.api.Snapshot');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.ContractKey');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetSnapshotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetSnapshotRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetSnapshotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetSnapshotRequest.displayName = 'proto.quotation.api.GetSnapshotRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetSnapshotRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetSnapshotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetSnapshotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetSnapshotRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetSnapshotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetSnapshotRequest}
 */
proto.quotation.api.GetSnapshotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetSnapshotRequest;
  return proto.quotation.api.GetSnapshotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetSnapshotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetSnapshotRequest}
 */
proto.quotation.api.GetSnapshotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetSnapshotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetSnapshotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetSnapshotRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetSnapshotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.GetSnapshotRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.GetSnapshotRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.GetSnapshotRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.GetSnapshotRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.Snapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.Snapshot.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.Snapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.Snapshot.displayName = 'proto.quotation.api.Snapshot';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.Snapshot.repeatedFields_ = [18,19,20,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.Snapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.Snapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.Snapshot} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.Snapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    open: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    last: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    high: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    low: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    preclose: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    presettle: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    uplimit: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    downlimit: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 14, 0),
    turnover: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    lastvolume: jspb.Message.getFieldWithDefault(msg, 16, 0),
    openinterest: jspb.Message.getFieldWithDefault(msg, 17, 0),
    bidpriceList: jspb.Message.getRepeatedFloatingPointField(msg, 18),
    bidvolumeList: jspb.Message.getField(msg, 19),
    askpriceList: jspb.Message.getRepeatedFloatingPointField(msg, 20),
    askvolumeList: jspb.Message.getField(msg, 21),
    timestamp: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.Snapshot}
 */
proto.quotation.api.Snapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.Snapshot;
  return proto.quotation.api.Snapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.Snapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.Snapshot}
 */
proto.quotation.api.Snapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpen(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLast(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHigh(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLow(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPreclose(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPresettle(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUplimit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDownlimit(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTurnover(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setLastvolume(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpeninterest(value);
      break;
    case 18:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setBidpriceList(value);
      break;
    case 19:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
      msg.setBidvolumeList(value);
      break;
    case 20:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setAskpriceList(value);
      break;
    case 21:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
      msg.setAskvolumeList(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.Snapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.Snapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.Snapshot} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.Snapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOpen();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLast();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getHigh();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getLow();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getPreclose();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getPresettle();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getUplimit();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getDownlimit();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      14,
      f
    );
  }
  f = message.getTurnover();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getLastvolume();
  if (f !== 0) {
    writer.writeFixed64(
      16,
      f
    );
  }
  f = message.getOpeninterest();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getBidpriceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      18,
      f
    );
  }
  f = message.getBidvolumeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      19,
      f
    );
  }
  f = message.getAskpriceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      20,
      f
    );
  }
  f = message.getAskvolumeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      21,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.Snapshot.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.Snapshot.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.Snapshot.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.Snapshot.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.Snapshot.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.Snapshot.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.Snapshot.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.Snapshot.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.Snapshot.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.Snapshot.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.Snapshot.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.Snapshot.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double open = 6;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getOpen = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setOpen = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double last = 7;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getLast = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setLast = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional double high = 8;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getHigh = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setHigh = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional double low = 9;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getLow = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setLow = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional double preClose = 10;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getPreclose = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setPreclose = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional double preSettle = 11;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getPresettle = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setPresettle = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional double upLimit = 12;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getUplimit = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setUplimit = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional double downLimit = 13;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getDownlimit = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setDownlimit = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional fixed64 volume = 14;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional double turnover = 15;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getTurnover = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setTurnover = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional fixed64 lastVolume = 16;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getLastvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setLastvolume = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional int64 openInterest = 17;
 * @return {number}
 */
proto.quotation.api.Snapshot.prototype.getOpeninterest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.quotation.api.Snapshot.prototype.setOpeninterest = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * repeated double bidPrice = 18;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.Snapshot.prototype.getBidpriceList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 18));
};


/** @param {!Array.<number>} value */
proto.quotation.api.Snapshot.prototype.setBidpriceList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.Snapshot.prototype.addBidprice = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


proto.quotation.api.Snapshot.prototype.clearBidpriceList = function() {
  this.setBidpriceList([]);
};


/**
 * repeated fixed64 bidVolume = 19;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.Snapshot.prototype.getBidvolumeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 19));
};


/** @param {!Array.<number>} value */
proto.quotation.api.Snapshot.prototype.setBidvolumeList = function(value) {
  jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.Snapshot.prototype.addBidvolume = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


proto.quotation.api.Snapshot.prototype.clearBidvolumeList = function() {
  this.setBidvolumeList([]);
};


/**
 * repeated double askPrice = 20;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.Snapshot.prototype.getAskpriceList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 20));
};


/** @param {!Array.<number>} value */
proto.quotation.api.Snapshot.prototype.setAskpriceList = function(value) {
  jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.Snapshot.prototype.addAskprice = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


proto.quotation.api.Snapshot.prototype.clearAskpriceList = function() {
  this.setAskpriceList([]);
};


/**
 * repeated fixed64 askVolume = 21;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.Snapshot.prototype.getAskvolumeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 21));
};


/** @param {!Array.<number>} value */
proto.quotation.api.Snapshot.prototype.setAskvolumeList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.Snapshot.prototype.addAskvolume = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


proto.quotation.api.Snapshot.prototype.clearAskvolumeList = function() {
  this.setAskvolumeList([]);
};


/**
 * optional string timestamp = 22;
 * @return {string}
 */
proto.quotation.api.Snapshot.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.quotation.api.Snapshot.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 22, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetSnapshotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetSnapshotResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetSnapshotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetSnapshotResponse.displayName = 'proto.quotation.api.GetSnapshotResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetSnapshotResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetSnapshotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetSnapshotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetSnapshotResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetSnapshotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listsnapshotList: jspb.Message.toObjectList(msg.getListsnapshotList(),
    proto.quotation.api.Snapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetSnapshotResponse}
 */
proto.quotation.api.GetSnapshotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetSnapshotResponse;
  return proto.quotation.api.GetSnapshotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetSnapshotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetSnapshotResponse}
 */
proto.quotation.api.GetSnapshotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Snapshot;
      reader.readMessage(value,proto.quotation.api.Snapshot.deserializeBinaryFromReader);
      msg.addListsnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetSnapshotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetSnapshotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetSnapshotResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetSnapshotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListsnapshotList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.Snapshot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Snapshot listSnapshot = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.Snapshot>}
 */
proto.quotation.api.GetSnapshotResponse.prototype.getListsnapshotList = function() {
  return /** @type{!Array.<!proto.quotation.api.Snapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.Snapshot, 1));
};


/** @param {!Array.<!proto.quotation.api.Snapshot>} value */
proto.quotation.api.GetSnapshotResponse.prototype.setListsnapshotList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.Snapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.Snapshot}
 */
proto.quotation.api.GetSnapshotResponse.prototype.addListsnapshot = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.Snapshot, opt_index);
};


proto.quotation.api.GetSnapshotResponse.prototype.clearListsnapshotList = function() {
  this.setListsnapshotList([]);
};



},{}],6:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.CommodityKey');
goog.provide('proto.quotation.api.ContractStatus');
goog.provide('proto.quotation.api.GetContractStatusRequest');
goog.provide('proto.quotation.api.GetContractStatusResponse');
goog.provide('proto.quotation.api.Status');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.CommodityKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.CommodityKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.CommodityKey.displayName = 'proto.quotation.api.CommodityKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.CommodityKey.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.CommodityKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.CommodityKey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.CommodityKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.CommodityKey}
 */
proto.quotation.api.CommodityKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.CommodityKey;
  return proto.quotation.api.CommodityKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.CommodityKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.CommodityKey}
 */
proto.quotation.api.CommodityKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.CommodityKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.CommodityKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.CommodityKey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.CommodityKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.CommodityKey.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityKey.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.CommodityKey.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityKey.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.CommodityKey.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityKey.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetContractStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetContractStatusRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetContractStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetContractStatusRequest.displayName = 'proto.quotation.api.GetContractStatusRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetContractStatusRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetContractStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetContractStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetContractStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetContractStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcommodityList: jspb.Message.toObjectList(msg.getListcommodityList(),
    proto.quotation.api.CommodityKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetContractStatusRequest}
 */
proto.quotation.api.GetContractStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetContractStatusRequest;
  return proto.quotation.api.GetContractStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetContractStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetContractStatusRequest}
 */
proto.quotation.api.GetContractStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.CommodityKey;
      reader.readMessage(value,proto.quotation.api.CommodityKey.deserializeBinaryFromReader);
      msg.addListcommodity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetContractStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetContractStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetContractStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetContractStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcommodityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.CommodityKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CommodityKey listCommodity = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.CommodityKey>}
 */
proto.quotation.api.GetContractStatusRequest.prototype.getListcommodityList = function() {
  return /** @type{!Array.<!proto.quotation.api.CommodityKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.CommodityKey, 1));
};


/** @param {!Array.<!proto.quotation.api.CommodityKey>} value */
proto.quotation.api.GetContractStatusRequest.prototype.setListcommodityList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.CommodityKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.CommodityKey}
 */
proto.quotation.api.GetContractStatusRequest.prototype.addListcommodity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.CommodityKey, opt_index);
};


proto.quotation.api.GetContractStatusRequest.prototype.clearListcommodityList = function() {
  this.setListcommodityList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ContractStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.ContractStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ContractStatus.displayName = 'proto.quotation.api.ContractStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ContractStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ContractStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ContractStatus} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ContractStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ContractStatus}
 */
proto.quotation.api.ContractStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ContractStatus;
  return proto.quotation.api.ContractStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ContractStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ContractStatus}
 */
proto.quotation.api.ContractStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {!proto.quotation.api.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ContractStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ContractStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ContractStatus} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ContractStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.ContractStatus.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.ContractStatus.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.ContractStatus.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.ContractStatus.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.ContractStatus.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ContractStatus.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.ContractStatus.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ContractStatus.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.ContractStatus.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ContractStatus.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional Status status = 5;
 * @return {!proto.quotation.api.Status}
 */
proto.quotation.api.ContractStatus.prototype.getStatus = function() {
  return /** @type {!proto.quotation.api.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.quotation.api.Status} value */
proto.quotation.api.ContractStatus.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetContractStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetContractStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetContractStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetContractStatusResponse.displayName = 'proto.quotation.api.GetContractStatusResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetContractStatusResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetContractStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetContractStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetContractStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetContractStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    liststatusList: jspb.Message.toObjectList(msg.getListstatusList(),
    proto.quotation.api.ContractStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetContractStatusResponse}
 */
proto.quotation.api.GetContractStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetContractStatusResponse;
  return proto.quotation.api.GetContractStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetContractStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetContractStatusResponse}
 */
proto.quotation.api.GetContractStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractStatus;
      reader.readMessage(value,proto.quotation.api.ContractStatus.deserializeBinaryFromReader);
      msg.addListstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetContractStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetContractStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetContractStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetContractStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListstatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractStatus listStatus = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractStatus>}
 */
proto.quotation.api.GetContractStatusResponse.prototype.getListstatusList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractStatus, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractStatus>} value */
proto.quotation.api.GetContractStatusResponse.prototype.setListstatusList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractStatus}
 */
proto.quotation.api.GetContractStatusResponse.prototype.addListstatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractStatus, opt_index);
};


proto.quotation.api.GetContractStatusResponse.prototype.clearListstatusList = function() {
  this.setListstatusList([]);
};


/**
 * @enum {number}
 */
proto.quotation.api.Status = {
  KINITIALIZE: 0,
  KCALLACTION: 1,
  KPRETRANSACTION: 2,
  KCONTINOUS: 3,
  KCONTINOUSREST: 4,
  KPOSTTRANSACTION: 5,
  KCLOSED: 6
};


},{}],7:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.Direction');
goog.provide('proto.quotation.api.GetTransactionRequest');
goog.provide('proto.quotation.api.GetTransactionResponse');
goog.provide('proto.quotation.api.TransactionDetail');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.GetTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetTransactionRequest.displayName = 'proto.quotation.api.GetTransactionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, ""),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetTransactionRequest}
 */
proto.quotation.api.GetTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetTransactionRequest;
  return proto.quotation.api.GetTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetTransactionRequest}
 */
proto.quotation.api.GetTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.GetTransactionRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.GetTransactionRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.GetTransactionRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.GetTransactionRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.quotation.api.GetTransactionRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.quotation.api.GetTransactionRequest.prototype.setCount = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.TransactionDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.TransactionDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.TransactionDetail.displayName = 'proto.quotation.api.TransactionDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.TransactionDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.TransactionDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.TransactionDetail} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.TransactionDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 2, 0),
    addopeninterest: jspb.Message.getFieldWithDefault(msg, 3, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.TransactionDetail}
 */
proto.quotation.api.TransactionDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.TransactionDetail;
  return proto.quotation.api.TransactionDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.TransactionDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.TransactionDetail}
 */
proto.quotation.api.TransactionDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAddopeninterest(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {!proto.quotation.api.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.TransactionDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.TransactionDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.TransactionDetail} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.TransactionDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getAddopeninterest();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.quotation.api.TransactionDetail.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.TransactionDetail.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 volume = 2;
 * @return {number}
 */
proto.quotation.api.TransactionDetail.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.quotation.api.TransactionDetail.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 addOpenInterest = 3;
 * @return {number}
 */
proto.quotation.api.TransactionDetail.prototype.getAddopeninterest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.quotation.api.TransactionDetail.prototype.setAddopeninterest = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.quotation.api.TransactionDetail.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.TransactionDetail.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional Direction direction = 5;
 * @return {!proto.quotation.api.Direction}
 */
proto.quotation.api.TransactionDetail.prototype.getDirection = function() {
  return /** @type {!proto.quotation.api.Direction} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.quotation.api.Direction} value */
proto.quotation.api.TransactionDetail.prototype.setDirection = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetTransactionResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetTransactionResponse.displayName = 'proto.quotation.api.GetTransactionResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetTransactionResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    listtransactionList: jspb.Message.toObjectList(msg.getListtransactionList(),
    proto.quotation.api.TransactionDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetTransactionResponse}
 */
proto.quotation.api.GetTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetTransactionResponse;
  return proto.quotation.api.GetTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetTransactionResponse}
 */
proto.quotation.api.GetTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = new proto.quotation.api.TransactionDetail;
      reader.readMessage(value,proto.quotation.api.TransactionDetail.deserializeBinaryFromReader);
      msg.addListtransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getListtransactionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.quotation.api.TransactionDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.GetTransactionResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.GetTransactionResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.GetTransactionResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.GetTransactionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.GetTransactionResponse.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionResponse.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.GetTransactionResponse.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionResponse.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.GetTransactionResponse.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionResponse.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.GetTransactionResponse.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.GetTransactionResponse.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated TransactionDetail listTransaction = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.TransactionDetail>}
 */
proto.quotation.api.GetTransactionResponse.prototype.getListtransactionList = function() {
  return /** @type{!Array.<!proto.quotation.api.TransactionDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.TransactionDetail, 6));
};


/** @param {!Array.<!proto.quotation.api.TransactionDetail>} value */
proto.quotation.api.GetTransactionResponse.prototype.setListtransactionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.quotation.api.TransactionDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.TransactionDetail}
 */
proto.quotation.api.GetTransactionResponse.prototype.addListtransaction = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.quotation.api.TransactionDetail, opt_index);
};


proto.quotation.api.GetTransactionResponse.prototype.clearListtransactionList = function() {
  this.setListtransactionList([]);
};


/**
 * @enum {number}
 */
proto.quotation.api.Direction = {
  KFLAT: 0,
  KSHORT: 1,
  KLONG: 2
};


},{}],8:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.GetTrendRequest');
goog.provide('proto.quotation.api.GetTrendResponse');
goog.provide('proto.quotation.api.Trend');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetTrendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.GetTrendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetTrendRequest.displayName = 'proto.quotation.api.GetTrendRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetTrendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetTrendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetTrendRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetTrendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetTrendRequest}
 */
proto.quotation.api.GetTrendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetTrendRequest;
  return proto.quotation.api.GetTrendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetTrendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetTrendRequest}
 */
proto.quotation.api.GetTrendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetTrendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetTrendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetTrendRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetTrendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.GetTrendRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.GetTrendRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.GetTrendRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.GetTrendRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.Trend = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.Trend, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.Trend.displayName = 'proto.quotation.api.Trend';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.Trend.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.Trend.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.Trend} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.Trend.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    turnover: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalturnover: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    totalvolume: jspb.Message.getFieldWithDefault(msg, 5, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.Trend}
 */
proto.quotation.api.Trend.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.Trend;
  return proto.quotation.api.Trend.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.Trend} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.Trend}
 */
proto.quotation.api.Trend.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTurnover(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalturnover(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalvolume(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.Trend.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.Trend.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.Trend} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.Trend.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getTurnover();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getTotalturnover();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTotalvolume();
  if (f !== 0) {
    writer.writeFixed64(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.quotation.api.Trend.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.Trend.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double turnover = 2;
 * @return {number}
 */
proto.quotation.api.Trend.prototype.getTurnover = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.quotation.api.Trend.prototype.setTurnover = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional fixed64 volume = 3;
 * @return {number}
 */
proto.quotation.api.Trend.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.quotation.api.Trend.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double totalTurnover = 4;
 * @return {number}
 */
proto.quotation.api.Trend.prototype.getTotalturnover = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.quotation.api.Trend.prototype.setTotalturnover = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional fixed64 totalVolume = 5;
 * @return {number}
 */
proto.quotation.api.Trend.prototype.getTotalvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.quotation.api.Trend.prototype.setTotalvolume = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string timestamp = 6;
 * @return {string}
 */
proto.quotation.api.Trend.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.quotation.api.Trend.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.GetTrendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.GetTrendResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.GetTrendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.GetTrendResponse.displayName = 'proto.quotation.api.GetTrendResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.GetTrendResponse.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.GetTrendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.GetTrendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.GetTrendResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.GetTrendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timepointList: jspb.Message.getField(msg, 6),
    trendList: jspb.Message.toObjectList(msg.getTrendList(),
    proto.quotation.api.Trend.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.GetTrendResponse}
 */
proto.quotation.api.GetTrendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.GetTrendResponse;
  return proto.quotation.api.GetTrendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.GetTrendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.GetTrendResponse}
 */
proto.quotation.api.GetTrendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimepoint(value);
      break;
    case 7:
      var value = new proto.quotation.api.Trend;
      reader.readMessage(value,proto.quotation.api.Trend.deserializeBinaryFromReader);
      msg.addTrend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.GetTrendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.GetTrendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.GetTrendResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.GetTrendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimepointList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getTrendList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.quotation.api.Trend.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.GetTrendResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.GetTrendResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.GetTrendResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.GetTrendResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.GetTrendResponse.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendResponse.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.GetTrendResponse.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendResponse.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.GetTrendResponse.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendResponse.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.GetTrendResponse.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.GetTrendResponse.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated string timepoint = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.quotation.api.GetTrendResponse.prototype.getTimepointList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 6));
};


/** @param {!Array.<string>} value */
proto.quotation.api.GetTrendResponse.prototype.setTimepointList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.quotation.api.GetTrendResponse.prototype.addTimepoint = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.quotation.api.GetTrendResponse.prototype.clearTimepointList = function() {
  this.setTimepointList([]);
};


/**
 * repeated Trend trend = 7;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.Trend>}
 */
proto.quotation.api.GetTrendResponse.prototype.getTrendList = function() {
  return /** @type{!Array.<!proto.quotation.api.Trend>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.Trend, 7));
};


/** @param {!Array.<!proto.quotation.api.Trend>} value */
proto.quotation.api.GetTrendResponse.prototype.setTrendList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.quotation.api.Trend=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.Trend}
 */
proto.quotation.api.GetTrendResponse.prototype.addTrend = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.quotation.api.Trend, opt_index);
};


proto.quotation.api.GetTrendResponse.prototype.clearTrendList = function() {
  this.setTrendList([]);
};



},{}],9:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!   

goog.provide('proto.quotation.api.CommodityInfo');
goog.provide('proto.quotation.api.CommodityList');
goog.provide('proto.quotation.api.ListCommodityRequest');
goog.provide('proto.quotation.api.ListCommodityResponse');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListCommodityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListCommodityRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListCommodityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListCommodityRequest.displayName = 'proto.quotation.api.ListCommodityRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListCommodityRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListCommodityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListCommodityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListCommodityRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListCommodityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listexchangeList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListCommodityRequest}
 */
proto.quotation.api.ListCommodityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListCommodityRequest;
  return proto.quotation.api.ListCommodityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListCommodityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListCommodityRequest}
 */
proto.quotation.api.ListCommodityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addListexchange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListCommodityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListCommodityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListCommodityRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListCommodityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListexchangeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string listExchange = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.quotation.api.ListCommodityRequest.prototype.getListexchangeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {!Array.<string>} value */
proto.quotation.api.ListCommodityRequest.prototype.setListexchangeList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.quotation.api.ListCommodityRequest.prototype.addListexchange = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.quotation.api.ListCommodityRequest.prototype.clearListexchangeList = function() {
  this.setListexchangeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.CommodityInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.CommodityInfo.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.CommodityInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.CommodityInfo.displayName = 'proto.quotation.api.CommodityInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.CommodityInfo.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.CommodityInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.CommodityInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.CommodityInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.CommodityInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commodityname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    volunit: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    mpc: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    offerdenominator: jspb.Message.getFieldWithDefault(msg, 7, 0),
    centralizedbiddingsessionList: jspb.Message.getField(msg, 8),
    tradingcontinousList: jspb.Message.getField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.CommodityInfo}
 */
proto.quotation.api.CommodityInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.CommodityInfo;
  return proto.quotation.api.CommodityInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.CommodityInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.CommodityInfo}
 */
proto.quotation.api.CommodityInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityname(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolunit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMpc(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOfferdenominator(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addCentralizedbiddingsession(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addTradingcontinous(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.CommodityInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.CommodityInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.CommodityInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.CommodityInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommodityname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVolunit();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getMpc();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getOfferdenominator();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCentralizedbiddingsessionList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getTradingcontinousList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.CommodityInfo.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityInfo.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.CommodityInfo.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityInfo.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.CommodityInfo.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityInfo.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityName = 4;
 * @return {string}
 */
proto.quotation.api.CommodityInfo.prototype.getCommodityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.CommodityInfo.prototype.setCommodityname = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double volunit = 5;
 * @return {number}
 */
proto.quotation.api.CommodityInfo.prototype.getVolunit = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.quotation.api.CommodityInfo.prototype.setVolunit = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double MPC = 6;
 * @return {number}
 */
proto.quotation.api.CommodityInfo.prototype.getMpc = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.quotation.api.CommodityInfo.prototype.setMpc = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 offerDenominator = 7;
 * @return {number}
 */
proto.quotation.api.CommodityInfo.prototype.getOfferdenominator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.quotation.api.CommodityInfo.prototype.setOfferdenominator = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * repeated string centralizedBiddingSession = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.quotation.api.CommodityInfo.prototype.getCentralizedbiddingsessionList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 8));
};


/** @param {!Array.<string>} value */
proto.quotation.api.CommodityInfo.prototype.setCentralizedbiddingsessionList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.quotation.api.CommodityInfo.prototype.addCentralizedbiddingsession = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.quotation.api.CommodityInfo.prototype.clearCentralizedbiddingsessionList = function() {
  this.setCentralizedbiddingsessionList([]);
};


/**
 * repeated string tradingContinous = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.quotation.api.CommodityInfo.prototype.getTradingcontinousList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 9));
};


/** @param {!Array.<string>} value */
proto.quotation.api.CommodityInfo.prototype.setTradingcontinousList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.quotation.api.CommodityInfo.prototype.addTradingcontinous = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.quotation.api.CommodityInfo.prototype.clearTradingcontinousList = function() {
  this.setTradingcontinousList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.CommodityList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.CommodityList.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.CommodityList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.CommodityList.displayName = 'proto.quotation.api.CommodityList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.CommodityList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.CommodityList.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.CommodityList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.CommodityList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.CommodityList.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    listcommodityList: jspb.Message.toObjectList(msg.getListcommodityList(),
    proto.quotation.api.CommodityInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.CommodityList}
 */
proto.quotation.api.CommodityList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.CommodityList;
  return proto.quotation.api.CommodityList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.CommodityList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.CommodityList}
 */
proto.quotation.api.CommodityList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.quotation.api.CommodityInfo;
      reader.readMessage(value,proto.quotation.api.CommodityInfo.deserializeBinaryFromReader);
      msg.addListcommodity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.CommodityList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.CommodityList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.CommodityList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.CommodityList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getListcommodityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.quotation.api.CommodityInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.CommodityList.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.CommodityList.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.CommodityList.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.CommodityList.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CommodityInfo listCommodity = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.CommodityInfo>}
 */
proto.quotation.api.CommodityList.prototype.getListcommodityList = function() {
  return /** @type{!Array.<!proto.quotation.api.CommodityInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.CommodityInfo, 2));
};


/** @param {!Array.<!proto.quotation.api.CommodityInfo>} value */
proto.quotation.api.CommodityList.prototype.setListcommodityList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.quotation.api.CommodityInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.CommodityInfo}
 */
proto.quotation.api.CommodityList.prototype.addListcommodity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.quotation.api.CommodityInfo, opt_index);
};


proto.quotation.api.CommodityList.prototype.clearListcommodityList = function() {
  this.setListcommodityList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListCommodityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.ListCommodityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListCommodityResponse.displayName = 'proto.quotation.api.ListCommodityResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListCommodityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListCommodityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListCommodityResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListCommodityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapcommodityMap: (f = msg.getMapcommodityMap()) ? f.toObject(includeInstance, proto.quotation.api.CommodityList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListCommodityResponse}
 */
proto.quotation.api.ListCommodityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListCommodityResponse;
  return proto.quotation.api.ListCommodityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListCommodityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListCommodityResponse}
 */
proto.quotation.api.ListCommodityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMapcommodityMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.quotation.api.CommodityList.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListCommodityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListCommodityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListCommodityResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListCommodityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapcommodityMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.quotation.api.CommodityList.serializeBinaryToWriter);
  }
};


/**
 * map<string, CommodityList> mapCommodity = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.quotation.api.CommodityList>}
 */
proto.quotation.api.ListCommodityResponse.prototype.getMapcommodityMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.quotation.api.CommodityList>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.quotation.api.CommodityList));
};


proto.quotation.api.ListCommodityResponse.prototype.clearMapcommodityMap = function() {
  this.getMapcommodityMap().clear();
};



},{}],10:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.Commodity');
goog.provide('proto.quotation.api.ListContract');
goog.provide('proto.quotation.api.ListContractRequest');
goog.provide('proto.quotation.api.ListContractResponse');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.Commodity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.Commodity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.Commodity.displayName = 'proto.quotation.api.Commodity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.Commodity.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.Commodity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.Commodity} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.Commodity.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.Commodity}
 */
proto.quotation.api.Commodity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.Commodity;
  return proto.quotation.api.Commodity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.Commodity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.Commodity}
 */
proto.quotation.api.Commodity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.Commodity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.Commodity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.Commodity} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.Commodity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.Commodity.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.Commodity.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.Commodity.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.Commodity.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.Commodity.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.Commodity.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListContractRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListContractRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListContractRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListContractRequest.displayName = 'proto.quotation.api.ListContractRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListContractRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListContractRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListContractRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListContractRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListContractRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcommodityList: jspb.Message.toObjectList(msg.getListcommodityList(),
    proto.quotation.api.Commodity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListContractRequest}
 */
proto.quotation.api.ListContractRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListContractRequest;
  return proto.quotation.api.ListContractRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListContractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListContractRequest}
 */
proto.quotation.api.ListContractRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Commodity;
      reader.readMessage(value,proto.quotation.api.Commodity.deserializeBinaryFromReader);
      msg.addListcommodity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListContractRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListContractRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListContractRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListContractRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcommodityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.Commodity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Commodity listCommodity = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.Commodity>}
 */
proto.quotation.api.ListContractRequest.prototype.getListcommodityList = function() {
  return /** @type{!Array.<!proto.quotation.api.Commodity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.Commodity, 1));
};


/** @param {!Array.<!proto.quotation.api.Commodity>} value */
proto.quotation.api.ListContractRequest.prototype.setListcommodityList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.Commodity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.Commodity}
 */
proto.quotation.api.ListContractRequest.prototype.addListcommodity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.Commodity, opt_index);
};


proto.quotation.api.ListContractRequest.prototype.clearListcommodityList = function() {
  this.setListcommodityList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListContract.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListContract.displayName = 'proto.quotation.api.ListContract';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListContract.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListContract.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListContract} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    listcontractList: jspb.Message.getField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListContract}
 */
proto.quotation.api.ListContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListContract;
  return proto.quotation.api.ListContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListContract}
 */
proto.quotation.api.ListContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListContract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListContract} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListContract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.ListContract.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.ListContract.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.ListContract.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.ListContract.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.ListContract.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ListContract.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.ListContract.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ListContract.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.ListContract.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ListContract.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated string listContract = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.quotation.api.ListContract.prototype.getListcontractList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 5));
};


/** @param {!Array.<string>} value */
proto.quotation.api.ListContract.prototype.setListcontractList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.quotation.api.ListContract.prototype.addListcontract = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.quotation.api.ListContract.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListContractResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListContractResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListContractResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListContractResponse.displayName = 'proto.quotation.api.ListContractResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListContractResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListContractResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListContractResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListContractResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListContractResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ListContract.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListContractResponse}
 */
proto.quotation.api.ListContractResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListContractResponse;
  return proto.quotation.api.ListContractResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListContractResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListContractResponse}
 */
proto.quotation.api.ListContractResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ListContract;
      reader.readMessage(value,proto.quotation.api.ListContract.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListContractResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListContractResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListContractResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListContractResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ListContract.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListContract listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ListContract>}
 */
proto.quotation.api.ListContractResponse.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ListContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ListContract, 1));
};


/** @param {!Array.<!proto.quotation.api.ListContract>} value */
proto.quotation.api.ListContractResponse.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ListContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ListContract}
 */
proto.quotation.api.ListContractResponse.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ListContract, opt_index);
};


proto.quotation.api.ListContractResponse.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



},{}],11:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.ExchangeInfo');
goog.provide('proto.quotation.api.ListExchangeRequest');
goog.provide('proto.quotation.api.ListExchangeResponse');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListExchangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.ListExchangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListExchangeRequest.displayName = 'proto.quotation.api.ListExchangeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListExchangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListExchangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListExchangeRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListExchangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListExchangeRequest}
 */
proto.quotation.api.ListExchangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListExchangeRequest;
  return proto.quotation.api.ListExchangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListExchangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListExchangeRequest}
 */
proto.quotation.api.ListExchangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListExchangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListExchangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListExchangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListExchangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ExchangeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ExchangeInfo.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ExchangeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ExchangeInfo.displayName = 'proto.quotation.api.ExchangeInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ExchangeInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ExchangeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ExchangeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ExchangeInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ExchangeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tradingtimeList: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ExchangeInfo}
 */
proto.quotation.api.ExchangeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ExchangeInfo;
  return proto.quotation.api.ExchangeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ExchangeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ExchangeInfo}
 */
proto.quotation.api.ExchangeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTradingtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ExchangeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ExchangeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ExchangeInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ExchangeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTradingtimeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.ExchangeInfo.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.ExchangeInfo.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string tradingTime = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.quotation.api.ExchangeInfo.prototype.getTradingtimeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<string>} value */
proto.quotation.api.ExchangeInfo.prototype.setTradingtimeList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.quotation.api.ExchangeInfo.prototype.addTradingtime = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.quotation.api.ExchangeInfo.prototype.clearTradingtimeList = function() {
  this.setTradingtimeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListExchangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListExchangeResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListExchangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListExchangeResponse.displayName = 'proto.quotation.api.ListExchangeResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListExchangeResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListExchangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListExchangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListExchangeResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListExchangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    listexchangeinfoList: jspb.Message.toObjectList(msg.getListexchangeinfoList(),
    proto.quotation.api.ExchangeInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListExchangeResponse}
 */
proto.quotation.api.ListExchangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListExchangeResponse;
  return proto.quotation.api.ListExchangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListExchangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListExchangeResponse}
 */
proto.quotation.api.ListExchangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 3:
      var value = new proto.quotation.api.ExchangeInfo;
      reader.readMessage(value,proto.quotation.api.ExchangeInfo.deserializeBinaryFromReader);
      msg.addListexchangeinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListExchangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListExchangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListExchangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListExchangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getListexchangeinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.quotation.api.ExchangeInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.ListExchangeResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.ListExchangeResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.ListExchangeResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.ListExchangeResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ExchangeInfo listExchangeInfo = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ExchangeInfo>}
 */
proto.quotation.api.ListExchangeResponse.prototype.getListexchangeinfoList = function() {
  return /** @type{!Array.<!proto.quotation.api.ExchangeInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ExchangeInfo, 3));
};


/** @param {!Array.<!proto.quotation.api.ExchangeInfo>} value */
proto.quotation.api.ListExchangeResponse.prototype.setListexchangeinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.quotation.api.ExchangeInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ExchangeInfo}
 */
proto.quotation.api.ListExchangeResponse.prototype.addListexchangeinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.quotation.api.ExchangeInfo, opt_index);
};


proto.quotation.api.ListExchangeResponse.prototype.clearListexchangeinfoList = function() {
  this.setListexchangeinfoList([]);
};



},{}],12:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.BidAskQueue');
goog.provide('proto.quotation.api.ListQuoteContent');
goog.provide('proto.quotation.api.ListQuoteSimple');
goog.provide('proto.quotation.api.QuoteAdditional');
goog.provide('proto.quotation.api.QuoteBasic');
goog.provide('proto.quotation.api.QuoteContent');
goog.provide('proto.quotation.api.QuoteSimple');
goog.provide('proto.quotation.api.QuoteTip');
goog.provide('proto.quotation.api.SubQuoteBookRequest');
goog.provide('proto.quotation.api.SubQuoteBookResponse');
goog.provide('proto.quotation.api.SubQuoteDetailRequest');
goog.provide('proto.quotation.api.SubQuoteDetailResponse');
goog.provide('proto.quotation.api.SubQuoteSimpleRequest');
goog.provide('proto.quotation.api.SubQuoteSimpleResponse');
goog.provide('proto.quotation.api.UnsubQuoteBookRequest');
goog.provide('proto.quotation.api.UnsubQuoteBookResponse');
goog.provide('proto.quotation.api.UnsubQuoteDetailRequest');
goog.provide('proto.quotation.api.UnsubQuoteDetailResponse');
goog.provide('proto.quotation.api.UnsubQuoteSimpleRequest');
goog.provide('proto.quotation.api.UnsubQuoteSimpleResponse');
goog.provide('proto.quotation.api.UnsubResult');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.ContractKey');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.UnsubResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubResult.displayName = 'proto.quotation.api.UnsubResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubResult.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubResult} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubResult;
  return proto.quotation.api.UnsubResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubResult} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.UnsubResult.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.UnsubResult.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.UnsubResult.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.UnsubResult.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteSimpleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteSimpleRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteSimpleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteSimpleRequest.displayName = 'proto.quotation.api.SubQuoteSimpleRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteSimpleRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteSimpleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteSimpleRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteSimpleRequest}
 */
proto.quotation.api.SubQuoteSimpleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteSimpleRequest;
  return proto.quotation.api.SubQuoteSimpleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteSimpleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteSimpleRequest}
 */
proto.quotation.api.SubQuoteSimpleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteSimpleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteSimpleRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteSimpleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.SubQuoteSimpleRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.SubQuoteSimpleRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteSimple = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteSimple, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteSimple.displayName = 'proto.quotation.api.QuoteSimple';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteSimple.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteSimple.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteSimple} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteSimple.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteSimple}
 */
proto.quotation.api.QuoteSimple.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteSimple;
  return proto.quotation.api.QuoteSimple.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteSimple} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteSimple}
 */
proto.quotation.api.QuoteSimple.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteSimple.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteSimple.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteSimple} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteSimple.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional double lastPrice = 1;
 * @return {number}
 */
proto.quotation.api.QuoteSimple.prototype.getLastprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteSimple.prototype.setLastprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 volume = 2;
 * @return {number}
 */
proto.quotation.api.QuoteSimple.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteSimple.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string timestamp = 3;
 * @return {string}
 */
proto.quotation.api.QuoteSimple.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.QuoteSimple.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListQuoteSimple = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListQuoteSimple.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListQuoteSimple, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListQuoteSimple.displayName = 'proto.quotation.api.ListQuoteSimple';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListQuoteSimple.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListQuoteSimple.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListQuoteSimple.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListQuoteSimple} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListQuoteSimple.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    listquoteList: jspb.Message.toObjectList(msg.getListquoteList(),
    proto.quotation.api.QuoteSimple.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListQuoteSimple}
 */
proto.quotation.api.ListQuoteSimple.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListQuoteSimple;
  return proto.quotation.api.ListQuoteSimple.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListQuoteSimple} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListQuoteSimple}
 */
proto.quotation.api.ListQuoteSimple.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = new proto.quotation.api.QuoteSimple;
      reader.readMessage(value,proto.quotation.api.QuoteSimple.deserializeBinaryFromReader);
      msg.addListquote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListQuoteSimple.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListQuoteSimple.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListQuoteSimple} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListQuoteSimple.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getListquoteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.quotation.api.QuoteSimple.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.ListQuoteSimple.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.ListQuoteSimple.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.ListQuoteSimple.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.ListQuoteSimple.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated QuoteSimple listQuote = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.QuoteSimple>}
 */
proto.quotation.api.ListQuoteSimple.prototype.getListquoteList = function() {
  return /** @type{!Array.<!proto.quotation.api.QuoteSimple>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.QuoteSimple, 6));
};


/** @param {!Array.<!proto.quotation.api.QuoteSimple>} value */
proto.quotation.api.ListQuoteSimple.prototype.setListquoteList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.quotation.api.QuoteSimple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.QuoteSimple}
 */
proto.quotation.api.ListQuoteSimple.prototype.addListquote = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.quotation.api.QuoteSimple, opt_index);
};


proto.quotation.api.ListQuoteSimple.prototype.clearListquoteList = function() {
  this.setListquoteList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteSimpleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteSimpleResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteSimpleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteSimpleResponse.displayName = 'proto.quotation.api.SubQuoteSimpleResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteSimpleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteSimpleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteSimpleResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listquotesimpleList: jspb.Message.toObjectList(msg.getListquotesimpleList(),
    proto.quotation.api.ListQuoteSimple.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteSimpleResponse}
 */
proto.quotation.api.SubQuoteSimpleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteSimpleResponse;
  return proto.quotation.api.SubQuoteSimpleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteSimpleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteSimpleResponse}
 */
proto.quotation.api.SubQuoteSimpleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ListQuoteSimple;
      reader.readMessage(value,proto.quotation.api.ListQuoteSimple.deserializeBinaryFromReader);
      msg.addListquotesimple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteSimpleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteSimpleResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteSimpleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListquotesimpleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ListQuoteSimple.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListQuoteSimple listQuoteSimple = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ListQuoteSimple>}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.getListquotesimpleList = function() {
  return /** @type{!Array.<!proto.quotation.api.ListQuoteSimple>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ListQuoteSimple, 1));
};


/** @param {!Array.<!proto.quotation.api.ListQuoteSimple>} value */
proto.quotation.api.SubQuoteSimpleResponse.prototype.setListquotesimpleList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ListQuoteSimple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ListQuoteSimple}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.addListquotesimple = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ListQuoteSimple, opt_index);
};


proto.quotation.api.SubQuoteSimpleResponse.prototype.clearListquotesimpleList = function() {
  this.setListquotesimpleList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteSimpleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteSimpleRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteSimpleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteSimpleRequest.displayName = 'proto.quotation.api.UnsubQuoteSimpleRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteSimpleRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteSimpleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteSimpleRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteSimpleRequest}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteSimpleRequest;
  return proto.quotation.api.UnsubQuoteSimpleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteSimpleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteSimpleRequest}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteSimpleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteSimpleRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteSimpleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.UnsubQuoteSimpleRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteSimpleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteSimpleResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteSimpleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteSimpleResponse.displayName = 'proto.quotation.api.UnsubQuoteSimpleResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteSimpleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteSimpleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteSimpleResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listresultList: jspb.Message.toObjectList(msg.getListresultList(),
    proto.quotation.api.UnsubResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteSimpleResponse}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteSimpleResponse;
  return proto.quotation.api.UnsubQuoteSimpleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteSimpleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteSimpleResponse}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.UnsubResult;
      reader.readMessage(value,proto.quotation.api.UnsubResult.deserializeBinaryFromReader);
      msg.addListresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteSimpleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteSimpleResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteSimpleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.UnsubResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnsubResult listResult = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.UnsubResult>}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.getListresultList = function() {
  return /** @type{!Array.<!proto.quotation.api.UnsubResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.UnsubResult, 1));
};


/** @param {!Array.<!proto.quotation.api.UnsubResult>} value */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.setListresultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.UnsubResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.addListresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.UnsubResult, opt_index);
};


proto.quotation.api.UnsubQuoteSimpleResponse.prototype.clearListresultList = function() {
  this.setListresultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteBasic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteBasic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteBasic.displayName = 'proto.quotation.api.QuoteBasic';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteBasic.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteBasic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteBasic} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteBasic.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    highprice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    lowprice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    totalvolume: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalturnover: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    positionvolume: jspb.Message.getFieldWithDefault(msg, 6, 0),
    averageprice: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    settleprice: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    insidevolume: jspb.Message.getFieldWithDefault(msg, 9, 0),
    outsidevolume: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteBasic}
 */
proto.quotation.api.QuoteBasic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteBasic;
  return proto.quotation.api.QuoteBasic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteBasic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteBasic}
 */
proto.quotation.api.QuoteBasic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalvolume(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalturnover(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPositionvolume(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageprice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSettleprice(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setInsidevolume(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setOutsidevolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteBasic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteBasic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteBasic} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteBasic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getHighprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLowprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTotalvolume();
  if (f !== 0) {
    writer.writeFixed64(
      4,
      f
    );
  }
  f = message.getTotalturnover();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPositionvolume();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAverageprice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSettleprice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getInsidevolume();
  if (f !== 0) {
    writer.writeFixed64(
      9,
      f
    );
  }
  f = message.getOutsidevolume();
  if (f !== 0) {
    writer.writeFixed64(
      10,
      f
    );
  }
};


/**
 * optional double lastPrice = 1;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getLastprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setLastprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double highPrice = 2;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getHighprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setHighprice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double lowPrice = 3;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getLowprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setLowprice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional fixed64 totalVolume = 4;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getTotalvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setTotalvolume = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double totalTurnover = 5;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getTotalturnover = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setTotalturnover = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 positionVolume = 6;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getPositionvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setPositionvolume = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double averagePrice = 7;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getAverageprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setAverageprice = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional double settlePrice = 8;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getSettleprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setSettleprice = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional fixed64 insideVolume = 9;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getInsidevolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setInsidevolume = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional fixed64 outsideVolume = 10;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getOutsidevolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setOutsidevolume = function(value) {
  jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.BidAskQueue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.BidAskQueue.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.BidAskQueue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.BidAskQueue.displayName = 'proto.quotation.api.BidAskQueue';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.BidAskQueue.repeatedFields_ = [3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.BidAskQueue.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.BidAskQueue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.BidAskQueue} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.BidAskQueue.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalbidvolume: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalaskvolume: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bidpriceList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
    bidvolumeList: jspb.Message.getField(msg, 4),
    askpriceList: jspb.Message.getRepeatedFloatingPointField(msg, 5),
    askvolumeList: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.BidAskQueue}
 */
proto.quotation.api.BidAskQueue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.BidAskQueue;
  return proto.quotation.api.BidAskQueue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.BidAskQueue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.BidAskQueue}
 */
proto.quotation.api.BidAskQueue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalbidvolume(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalaskvolume(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setBidpriceList(value);
      break;
    case 4:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
      msg.setBidvolumeList(value);
      break;
    case 5:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setAskpriceList(value);
      break;
    case 6:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
      msg.setAskvolumeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.BidAskQueue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.BidAskQueue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.BidAskQueue} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.BidAskQueue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalbidvolume();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getTotalaskvolume();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getBidpriceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getBidvolumeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      4,
      f
    );
  }
  f = message.getAskpriceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      5,
      f
    );
  }
  f = message.getAskvolumeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      6,
      f
    );
  }
};


/**
 * optional fixed64 totalBidVolume = 1;
 * @return {number}
 */
proto.quotation.api.BidAskQueue.prototype.getTotalbidvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.quotation.api.BidAskQueue.prototype.setTotalbidvolume = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 totalAskVolume = 2;
 * @return {number}
 */
proto.quotation.api.BidAskQueue.prototype.getTotalaskvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.quotation.api.BidAskQueue.prototype.setTotalaskvolume = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated double bidPrice = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getBidpriceList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setBidpriceList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addBidprice = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearBidpriceList = function() {
  this.setBidpriceList([]);
};


/**
 * repeated fixed64 bidVolume = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getBidvolumeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setBidvolumeList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addBidvolume = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearBidvolumeList = function() {
  this.setBidvolumeList([]);
};


/**
 * repeated double askPrice = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getAskpriceList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setAskpriceList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addAskprice = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearAskpriceList = function() {
  this.setAskpriceList([]);
};


/**
 * repeated fixed64 askVolume = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getAskvolumeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 6));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setAskvolumeList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addAskvolume = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearAskvolumeList = function() {
  this.setAskvolumeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteAdditional = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteAdditional, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteAdditional.displayName = 'proto.quotation.api.QuoteAdditional';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteAdditional.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteAdditional.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteAdditional} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteAdditional.toObject = function(includeInstance, msg) {
  var f, obj = {
    openprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    limitupprice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    limitdownprice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    precloseprice: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    presettleprice: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    prepositionvolume: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteAdditional}
 */
proto.quotation.api.QuoteAdditional.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteAdditional;
  return proto.quotation.api.QuoteAdditional.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteAdditional} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteAdditional}
 */
proto.quotation.api.QuoteAdditional.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpenprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLimitupprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLimitdownprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrecloseprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPresettleprice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrepositionvolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteAdditional.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteAdditional.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteAdditional} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteAdditional.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLimitupprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLimitdownprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPrecloseprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPresettleprice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPrepositionvolume();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional double openPrice = 1;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getOpenprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setOpenprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double limitUpPrice = 2;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getLimitupprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setLimitupprice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double limitDownPrice = 3;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getLimitdownprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setLimitdownprice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double preClosePrice = 4;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getPrecloseprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setPrecloseprice = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double preSettlePrice = 5;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getPresettleprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setPresettleprice = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 prePositionVolume = 6;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getPrepositionvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setPrepositionvolume = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteContent.displayName = 'proto.quotation.api.QuoteContent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteContent.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basic: (f = msg.getBasic()) && proto.quotation.api.QuoteBasic.toObject(includeInstance, f),
    bidaskqueue: (f = msg.getBidaskqueue()) && proto.quotation.api.BidAskQueue.toObject(includeInstance, f),
    additional: (f = msg.getAdditional()) && proto.quotation.api.QuoteAdditional.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteContent}
 */
proto.quotation.api.QuoteContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteContent;
  return proto.quotation.api.QuoteContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteContent}
 */
proto.quotation.api.QuoteContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = new proto.quotation.api.QuoteBasic;
      reader.readMessage(value,proto.quotation.api.QuoteBasic.deserializeBinaryFromReader);
      msg.setBasic(value);
      break;
    case 3:
      var value = new proto.quotation.api.BidAskQueue;
      reader.readMessage(value,proto.quotation.api.BidAskQueue.deserializeBinaryFromReader);
      msg.setBidaskqueue(value);
      break;
    case 4:
      var value = new proto.quotation.api.QuoteAdditional;
      reader.readMessage(value,proto.quotation.api.QuoteAdditional.deserializeBinaryFromReader);
      msg.setAdditional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasic();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quotation.api.QuoteBasic.serializeBinaryToWriter
    );
  }
  f = message.getBidaskqueue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.quotation.api.BidAskQueue.serializeBinaryToWriter
    );
  }
  f = message.getAdditional();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.quotation.api.QuoteAdditional.serializeBinaryToWriter
    );
  }
};


/**
 * optional string timestamp = 1;
 * @return {string}
 */
proto.quotation.api.QuoteContent.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.QuoteContent.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional QuoteBasic basic = 2;
 * @return {?proto.quotation.api.QuoteBasic}
 */
proto.quotation.api.QuoteContent.prototype.getBasic = function() {
  return /** @type{?proto.quotation.api.QuoteBasic} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.QuoteBasic, 2));
};


/** @param {?proto.quotation.api.QuoteBasic|undefined} value */
proto.quotation.api.QuoteContent.prototype.setBasic = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.quotation.api.QuoteContent.prototype.clearBasic = function() {
  this.setBasic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteContent.prototype.hasBasic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BidAskQueue bidAskQueue = 3;
 * @return {?proto.quotation.api.BidAskQueue}
 */
proto.quotation.api.QuoteContent.prototype.getBidaskqueue = function() {
  return /** @type{?proto.quotation.api.BidAskQueue} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.BidAskQueue, 3));
};


/** @param {?proto.quotation.api.BidAskQueue|undefined} value */
proto.quotation.api.QuoteContent.prototype.setBidaskqueue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.quotation.api.QuoteContent.prototype.clearBidaskqueue = function() {
  this.setBidaskqueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteContent.prototype.hasBidaskqueue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QuoteAdditional additional = 4;
 * @return {?proto.quotation.api.QuoteAdditional}
 */
proto.quotation.api.QuoteContent.prototype.getAdditional = function() {
  return /** @type{?proto.quotation.api.QuoteAdditional} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.QuoteAdditional, 4));
};


/** @param {?proto.quotation.api.QuoteAdditional|undefined} value */
proto.quotation.api.QuoteContent.prototype.setAdditional = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.quotation.api.QuoteContent.prototype.clearAdditional = function() {
  this.setAdditional(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteContent.prototype.hasAdditional = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListQuoteContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListQuoteContent.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListQuoteContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListQuoteContent.displayName = 'proto.quotation.api.ListQuoteContent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListQuoteContent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListQuoteContent.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListQuoteContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListQuoteContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListQuoteContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, ""),
    listcontentList: jspb.Message.toObjectList(msg.getListcontentList(),
    proto.quotation.api.QuoteContent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.ListQuoteContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListQuoteContent;
  return proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListQuoteContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 5:
      var value = new proto.quotation.api.QuoteContent;
      reader.readMessage(value,proto.quotation.api.QuoteContent.deserializeBinaryFromReader);
      msg.addListcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListQuoteContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListQuoteContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListQuoteContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListQuoteContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getListcontentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.quotation.api.QuoteContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated QuoteContent listContent = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.QuoteContent>}
 */
proto.quotation.api.ListQuoteContent.prototype.getListcontentList = function() {
  return /** @type{!Array.<!proto.quotation.api.QuoteContent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.QuoteContent, 5));
};


/** @param {!Array.<!proto.quotation.api.QuoteContent>} value */
proto.quotation.api.ListQuoteContent.prototype.setListcontentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.quotation.api.QuoteContent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.QuoteContent}
 */
proto.quotation.api.ListQuoteContent.prototype.addListcontent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.quotation.api.QuoteContent, opt_index);
};


proto.quotation.api.ListQuoteContent.prototype.clearListcontentList = function() {
  this.setListcontentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.SubQuoteDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteDetailRequest.displayName = 'proto.quotation.api.SubQuoteDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteDetailRequest}
 */
proto.quotation.api.SubQuoteDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteDetailRequest;
  return proto.quotation.api.SubQuoteDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteDetailRequest}
 */
proto.quotation.api.SubQuoteDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.SubQuoteDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteDetailResponse.displayName = 'proto.quotation.api.SubQuoteDetailResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    quotation: (f = msg.getQuotation()) && proto.quotation.api.ListQuoteContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteDetailResponse}
 */
proto.quotation.api.SubQuoteDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteDetailResponse;
  return proto.quotation.api.SubQuoteDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteDetailResponse}
 */
proto.quotation.api.SubQuoteDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.quotation.api.ListQuoteContent;
      reader.readMessage(value,proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader);
      msg.setQuotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getQuotation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quotation.api.ListQuoteContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.SubQuoteDetailResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.SubQuoteDetailResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListQuoteContent quotation = 2;
 * @return {?proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.getQuotation = function() {
  return /** @type{?proto.quotation.api.ListQuoteContent} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.ListQuoteContent, 2));
};


/** @param {?proto.quotation.api.ListQuoteContent|undefined} value */
proto.quotation.api.SubQuoteDetailResponse.prototype.setQuotation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.quotation.api.SubQuoteDetailResponse.prototype.clearQuotation = function() {
  this.setQuotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.hasQuotation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteDetailRequest.displayName = 'proto.quotation.api.UnsubQuoteDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteDetailRequest}
 */
proto.quotation.api.UnsubQuoteDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteDetailRequest;
  return proto.quotation.api.UnsubQuoteDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteDetailRequest}
 */
proto.quotation.api.UnsubQuoteDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteDetailResponse.displayName = 'proto.quotation.api.UnsubQuoteDetailResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteDetailResponse}
 */
proto.quotation.api.UnsubQuoteDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteDetailResponse;
  return proto.quotation.api.UnsubQuoteDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteDetailResponse}
 */
proto.quotation.api.UnsubQuoteDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.UnsubQuoteDetailResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteBookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteBookRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteBookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteBookRequest.displayName = 'proto.quotation.api.SubQuoteBookRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteBookRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteBookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteBookRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteBookRequest}
 */
proto.quotation.api.SubQuoteBookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteBookRequest;
  return proto.quotation.api.SubQuoteBookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteBookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteBookRequest}
 */
proto.quotation.api.SubQuoteBookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteBookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteBookRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteBookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.SubQuoteBookRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.SubQuoteBookRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteTip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteTip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteTip.displayName = 'proto.quotation.api.QuoteTip';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteTip.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteTip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteTip} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteTip.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    listquotecontent: (f = msg.getListquotecontent()) && proto.quotation.api.ListQuoteContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteTip}
 */
proto.quotation.api.QuoteTip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteTip;
  return proto.quotation.api.QuoteTip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteTip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteTip}
 */
proto.quotation.api.QuoteTip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.quotation.api.ListQuoteContent;
      reader.readMessage(value,proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader);
      msg.setListquotecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteTip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteTip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteTip} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteTip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getListquotecontent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quotation.api.ListQuoteContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.QuoteTip.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.QuoteTip.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.QuoteTip.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteTip.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListQuoteContent listQuoteContent = 2;
 * @return {?proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.QuoteTip.prototype.getListquotecontent = function() {
  return /** @type{?proto.quotation.api.ListQuoteContent} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.ListQuoteContent, 2));
};


/** @param {?proto.quotation.api.ListQuoteContent|undefined} value */
proto.quotation.api.QuoteTip.prototype.setListquotecontent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.quotation.api.QuoteTip.prototype.clearListquotecontent = function() {
  this.setListquotecontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteTip.prototype.hasListquotecontent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteBookResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteBookResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteBookResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteBookResponse.displayName = 'proto.quotation.api.SubQuoteBookResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteBookResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteBookResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteBookResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listquotetipList: jspb.Message.toObjectList(msg.getListquotetipList(),
    proto.quotation.api.QuoteTip.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteBookResponse}
 */
proto.quotation.api.SubQuoteBookResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteBookResponse;
  return proto.quotation.api.SubQuoteBookResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteBookResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteBookResponse}
 */
proto.quotation.api.SubQuoteBookResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.QuoteTip;
      reader.readMessage(value,proto.quotation.api.QuoteTip.deserializeBinaryFromReader);
      msg.addListquotetip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteBookResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteBookResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteBookResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListquotetipList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.QuoteTip.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QuoteTip listQuoteTip = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.QuoteTip>}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.getListquotetipList = function() {
  return /** @type{!Array.<!proto.quotation.api.QuoteTip>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.QuoteTip, 1));
};


/** @param {!Array.<!proto.quotation.api.QuoteTip>} value */
proto.quotation.api.SubQuoteBookResponse.prototype.setListquotetipList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.QuoteTip=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.QuoteTip}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.addListquotetip = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.QuoteTip, opt_index);
};


proto.quotation.api.SubQuoteBookResponse.prototype.clearListquotetipList = function() {
  this.setListquotetipList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteBookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteBookRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteBookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteBookRequest.displayName = 'proto.quotation.api.UnsubQuoteBookRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteBookRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteBookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteBookRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteBookRequest}
 */
proto.quotation.api.UnsubQuoteBookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteBookRequest;
  return proto.quotation.api.UnsubQuoteBookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteBookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteBookRequest}
 */
proto.quotation.api.UnsubQuoteBookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteBookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteBookRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteBookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.UnsubQuoteBookRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.UnsubQuoteBookRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteBookResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteBookResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteBookResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteBookResponse.displayName = 'proto.quotation.api.UnsubQuoteBookResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteBookResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteBookResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteBookResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listresultList: jspb.Message.toObjectList(msg.getListresultList(),
    proto.quotation.api.UnsubResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteBookResponse}
 */
proto.quotation.api.UnsubQuoteBookResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteBookResponse;
  return proto.quotation.api.UnsubQuoteBookResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteBookResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteBookResponse}
 */
proto.quotation.api.UnsubQuoteBookResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.UnsubResult;
      reader.readMessage(value,proto.quotation.api.UnsubResult.deserializeBinaryFromReader);
      msg.addListresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteBookResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteBookResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteBookResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.UnsubResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnsubResult listResult = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.UnsubResult>}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.getListresultList = function() {
  return /** @type{!Array.<!proto.quotation.api.UnsubResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.UnsubResult, 1));
};


/** @param {!Array.<!proto.quotation.api.UnsubResult>} value */
proto.quotation.api.UnsubQuoteBookResponse.prototype.setListresultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.UnsubResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.addListresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.UnsubResult, opt_index);
};


proto.quotation.api.UnsubQuoteBookResponse.prototype.clearListresultList = function() {
  this.setListresultList([]);
};



},{}]},{},[1]);
