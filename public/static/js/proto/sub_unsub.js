/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.quotation.api.BidAskQueue');
goog.provide('proto.quotation.api.ListQuoteContent');
goog.provide('proto.quotation.api.ListQuoteSimple');
goog.provide('proto.quotation.api.QuoteAdditional');
goog.provide('proto.quotation.api.QuoteBasic');
goog.provide('proto.quotation.api.QuoteContent');
goog.provide('proto.quotation.api.QuoteSimple');
goog.provide('proto.quotation.api.QuoteTip');
goog.provide('proto.quotation.api.SubQuoteBookRequest');
goog.provide('proto.quotation.api.SubQuoteBookResponse');
goog.provide('proto.quotation.api.SubQuoteDetailRequest');
goog.provide('proto.quotation.api.SubQuoteDetailResponse');
goog.provide('proto.quotation.api.SubQuoteSimpleRequest');
goog.provide('proto.quotation.api.SubQuoteSimpleResponse');
goog.provide('proto.quotation.api.UnsubQuoteBookRequest');
goog.provide('proto.quotation.api.UnsubQuoteBookResponse');
goog.provide('proto.quotation.api.UnsubQuoteDetailRequest');
goog.provide('proto.quotation.api.UnsubQuoteDetailResponse');
goog.provide('proto.quotation.api.UnsubQuoteSimpleRequest');
goog.provide('proto.quotation.api.UnsubQuoteSimpleResponse');
goog.provide('proto.quotation.api.UnsubResult');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.quotation.api.ContractKey');
goog.require('proto.quotation.api.Result');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.UnsubResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubResult.displayName = 'proto.quotation.api.UnsubResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubResult.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubResult} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubResult;
  return proto.quotation.api.UnsubResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubResult} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.UnsubResult.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.UnsubResult.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.UnsubResult.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.UnsubResult.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.UnsubResult.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubResult.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteSimpleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteSimpleRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteSimpleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteSimpleRequest.displayName = 'proto.quotation.api.SubQuoteSimpleRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteSimpleRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteSimpleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteSimpleRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteSimpleRequest}
 */
proto.quotation.api.SubQuoteSimpleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteSimpleRequest;
  return proto.quotation.api.SubQuoteSimpleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteSimpleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteSimpleRequest}
 */
proto.quotation.api.SubQuoteSimpleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteSimpleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteSimpleRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteSimpleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.SubQuoteSimpleRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.SubQuoteSimpleRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.SubQuoteSimpleRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteSimple = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteSimple, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteSimple.displayName = 'proto.quotation.api.QuoteSimple';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteSimple.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteSimple.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteSimple} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteSimple.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    volume: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteSimple}
 */
proto.quotation.api.QuoteSimple.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteSimple;
  return proto.quotation.api.QuoteSimple.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteSimple} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteSimple}
 */
proto.quotation.api.QuoteSimple.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setVolume(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteSimple.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteSimple.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteSimple} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteSimple.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional double lastPrice = 1;
 * @return {number}
 */
proto.quotation.api.QuoteSimple.prototype.getLastprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteSimple.prototype.setLastprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 volume = 2;
 * @return {number}
 */
proto.quotation.api.QuoteSimple.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteSimple.prototype.setVolume = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string timestamp = 3;
 * @return {string}
 */
proto.quotation.api.QuoteSimple.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.QuoteSimple.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListQuoteSimple = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListQuoteSimple.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListQuoteSimple, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListQuoteSimple.displayName = 'proto.quotation.api.ListQuoteSimple';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListQuoteSimple.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListQuoteSimple.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListQuoteSimple.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListQuoteSimple} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListQuoteSimple.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    exchangeno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    listquoteList: jspb.Message.toObjectList(msg.getListquoteList(),
    proto.quotation.api.QuoteSimple.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListQuoteSimple}
 */
proto.quotation.api.ListQuoteSimple.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListQuoteSimple;
  return proto.quotation.api.ListQuoteSimple.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListQuoteSimple} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListQuoteSimple}
 */
proto.quotation.api.ListQuoteSimple.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 6:
      var value = new proto.quotation.api.QuoteSimple;
      reader.readMessage(value,proto.quotation.api.QuoteSimple.deserializeBinaryFromReader);
      msg.addListquote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListQuoteSimple.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListQuoteSimple.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListQuoteSimple} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListQuoteSimple.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getListquoteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.quotation.api.QuoteSimple.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.ListQuoteSimple.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.ListQuoteSimple.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.ListQuoteSimple.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.ListQuoteSimple.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exchangeNo = 2;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityNo = 3;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string commodityType = 4;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contractNo = 5;
 * @return {string}
 */
proto.quotation.api.ListQuoteSimple.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteSimple.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated QuoteSimple listQuote = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.QuoteSimple>}
 */
proto.quotation.api.ListQuoteSimple.prototype.getListquoteList = function() {
  return /** @type{!Array.<!proto.quotation.api.QuoteSimple>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.QuoteSimple, 6));
};


/** @param {!Array.<!proto.quotation.api.QuoteSimple>} value */
proto.quotation.api.ListQuoteSimple.prototype.setListquoteList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.quotation.api.QuoteSimple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.QuoteSimple}
 */
proto.quotation.api.ListQuoteSimple.prototype.addListquote = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.quotation.api.QuoteSimple, opt_index);
};


proto.quotation.api.ListQuoteSimple.prototype.clearListquoteList = function() {
  this.setListquoteList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteSimpleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteSimpleResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteSimpleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteSimpleResponse.displayName = 'proto.quotation.api.SubQuoteSimpleResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteSimpleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteSimpleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteSimpleResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteSimpleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listquotesimpleList: jspb.Message.toObjectList(msg.getListquotesimpleList(),
    proto.quotation.api.ListQuoteSimple.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteSimpleResponse}
 */
proto.quotation.api.SubQuoteSimpleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteSimpleResponse;
  return proto.quotation.api.SubQuoteSimpleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteSimpleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteSimpleResponse}
 */
proto.quotation.api.SubQuoteSimpleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ListQuoteSimple;
      reader.readMessage(value,proto.quotation.api.ListQuoteSimple.deserializeBinaryFromReader);
      msg.addListquotesimple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteSimpleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteSimpleResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteSimpleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListquotesimpleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ListQuoteSimple.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListQuoteSimple listQuoteSimple = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ListQuoteSimple>}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.getListquotesimpleList = function() {
  return /** @type{!Array.<!proto.quotation.api.ListQuoteSimple>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ListQuoteSimple, 1));
};


/** @param {!Array.<!proto.quotation.api.ListQuoteSimple>} value */
proto.quotation.api.SubQuoteSimpleResponse.prototype.setListquotesimpleList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ListQuoteSimple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ListQuoteSimple}
 */
proto.quotation.api.SubQuoteSimpleResponse.prototype.addListquotesimple = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ListQuoteSimple, opt_index);
};


proto.quotation.api.SubQuoteSimpleResponse.prototype.clearListquotesimpleList = function() {
  this.setListquotesimpleList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteSimpleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteSimpleRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteSimpleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteSimpleRequest.displayName = 'proto.quotation.api.UnsubQuoteSimpleRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteSimpleRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteSimpleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteSimpleRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteSimpleRequest}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteSimpleRequest;
  return proto.quotation.api.UnsubQuoteSimpleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteSimpleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteSimpleRequest}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteSimpleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteSimpleRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteSimpleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.UnsubQuoteSimpleRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.UnsubQuoteSimpleRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteSimpleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteSimpleResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteSimpleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteSimpleResponse.displayName = 'proto.quotation.api.UnsubQuoteSimpleResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteSimpleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteSimpleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteSimpleResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listresultList: jspb.Message.toObjectList(msg.getListresultList(),
    proto.quotation.api.UnsubResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteSimpleResponse}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteSimpleResponse;
  return proto.quotation.api.UnsubQuoteSimpleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteSimpleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteSimpleResponse}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.UnsubResult;
      reader.readMessage(value,proto.quotation.api.UnsubResult.deserializeBinaryFromReader);
      msg.addListresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteSimpleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteSimpleResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteSimpleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.UnsubResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnsubResult listResult = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.UnsubResult>}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.getListresultList = function() {
  return /** @type{!Array.<!proto.quotation.api.UnsubResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.UnsubResult, 1));
};


/** @param {!Array.<!proto.quotation.api.UnsubResult>} value */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.setListresultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.UnsubResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubQuoteSimpleResponse.prototype.addListresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.UnsubResult, opt_index);
};


proto.quotation.api.UnsubQuoteSimpleResponse.prototype.clearListresultList = function() {
  this.setListresultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteBasic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteBasic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteBasic.displayName = 'proto.quotation.api.QuoteBasic';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteBasic.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteBasic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteBasic} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteBasic.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    highprice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    lowprice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    totalvolume: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalturnover: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    positionvolume: jspb.Message.getFieldWithDefault(msg, 6, 0),
    averageprice: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    settleprice: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    insidevolume: jspb.Message.getFieldWithDefault(msg, 9, 0),
    outsidevolume: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteBasic}
 */
proto.quotation.api.QuoteBasic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteBasic;
  return proto.quotation.api.QuoteBasic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteBasic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteBasic}
 */
proto.quotation.api.QuoteBasic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalvolume(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalturnover(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPositionvolume(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageprice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSettleprice(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setInsidevolume(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setOutsidevolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteBasic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteBasic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteBasic} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteBasic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getHighprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLowprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTotalvolume();
  if (f !== 0) {
    writer.writeFixed64(
      4,
      f
    );
  }
  f = message.getTotalturnover();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPositionvolume();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAverageprice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSettleprice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getInsidevolume();
  if (f !== 0) {
    writer.writeFixed64(
      9,
      f
    );
  }
  f = message.getOutsidevolume();
  if (f !== 0) {
    writer.writeFixed64(
      10,
      f
    );
  }
};


/**
 * optional double lastPrice = 1;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getLastprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setLastprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double highPrice = 2;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getHighprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setHighprice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double lowPrice = 3;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getLowprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setLowprice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional fixed64 totalVolume = 4;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getTotalvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setTotalvolume = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double totalTurnover = 5;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getTotalturnover = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setTotalturnover = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 positionVolume = 6;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getPositionvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setPositionvolume = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional double averagePrice = 7;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getAverageprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setAverageprice = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional double settlePrice = 8;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getSettleprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setSettleprice = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional fixed64 insideVolume = 9;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getInsidevolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setInsidevolume = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional fixed64 outsideVolume = 10;
 * @return {number}
 */
proto.quotation.api.QuoteBasic.prototype.getOutsidevolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteBasic.prototype.setOutsidevolume = function(value) {
  jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.BidAskQueue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.BidAskQueue.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.BidAskQueue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.BidAskQueue.displayName = 'proto.quotation.api.BidAskQueue';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.BidAskQueue.repeatedFields_ = [3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.BidAskQueue.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.BidAskQueue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.BidAskQueue} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.BidAskQueue.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalbidvolume: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalaskvolume: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bidpriceList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
    bidvolumeList: jspb.Message.getField(msg, 4),
    askpriceList: jspb.Message.getRepeatedFloatingPointField(msg, 5),
    askvolumeList: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.BidAskQueue}
 */
proto.quotation.api.BidAskQueue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.BidAskQueue;
  return proto.quotation.api.BidAskQueue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.BidAskQueue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.BidAskQueue}
 */
proto.quotation.api.BidAskQueue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalbidvolume(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setTotalaskvolume(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setBidpriceList(value);
      break;
    case 4:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
      msg.setBidvolumeList(value);
      break;
    case 5:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setAskpriceList(value);
      break;
    case 6:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
      msg.setAskvolumeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.BidAskQueue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.BidAskQueue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.BidAskQueue} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.BidAskQueue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalbidvolume();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getTotalaskvolume();
  if (f !== 0) {
    writer.writeFixed64(
      2,
      f
    );
  }
  f = message.getBidpriceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getBidvolumeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      4,
      f
    );
  }
  f = message.getAskpriceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      5,
      f
    );
  }
  f = message.getAskvolumeList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      6,
      f
    );
  }
};


/**
 * optional fixed64 totalBidVolume = 1;
 * @return {number}
 */
proto.quotation.api.BidAskQueue.prototype.getTotalbidvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.quotation.api.BidAskQueue.prototype.setTotalbidvolume = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 totalAskVolume = 2;
 * @return {number}
 */
proto.quotation.api.BidAskQueue.prototype.getTotalaskvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.quotation.api.BidAskQueue.prototype.setTotalaskvolume = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated double bidPrice = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getBidpriceList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setBidpriceList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addBidprice = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearBidpriceList = function() {
  this.setBidpriceList([]);
};


/**
 * repeated fixed64 bidVolume = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getBidvolumeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setBidvolumeList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addBidvolume = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearBidvolumeList = function() {
  this.setBidvolumeList([]);
};


/**
 * repeated double askPrice = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getAskpriceList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setAskpriceList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addAskprice = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearAskpriceList = function() {
  this.setAskpriceList([]);
};


/**
 * repeated fixed64 askVolume = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.quotation.api.BidAskQueue.prototype.getAskvolumeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 6));
};


/** @param {!Array.<number>} value */
proto.quotation.api.BidAskQueue.prototype.setAskvolumeList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.quotation.api.BidAskQueue.prototype.addAskvolume = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.quotation.api.BidAskQueue.prototype.clearAskvolumeList = function() {
  this.setAskvolumeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteAdditional = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteAdditional, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteAdditional.displayName = 'proto.quotation.api.QuoteAdditional';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteAdditional.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteAdditional.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteAdditional} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteAdditional.toObject = function(includeInstance, msg) {
  var f, obj = {
    openprice: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    limitupprice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    limitdownprice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    precloseprice: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    presettleprice: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    prepositionvolume: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteAdditional}
 */
proto.quotation.api.QuoteAdditional.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteAdditional;
  return proto.quotation.api.QuoteAdditional.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteAdditional} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteAdditional}
 */
proto.quotation.api.QuoteAdditional.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpenprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLimitupprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLimitdownprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrecloseprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPresettleprice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrepositionvolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteAdditional.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteAdditional.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteAdditional} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteAdditional.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenprice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLimitupprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLimitdownprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPrecloseprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPresettleprice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPrepositionvolume();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional double openPrice = 1;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getOpenprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setOpenprice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double limitUpPrice = 2;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getLimitupprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setLimitupprice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double limitDownPrice = 3;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getLimitdownprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setLimitdownprice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double preClosePrice = 4;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getPrecloseprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setPrecloseprice = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double preSettlePrice = 5;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getPresettleprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setPresettleprice = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 prePositionVolume = 6;
 * @return {number}
 */
proto.quotation.api.QuoteAdditional.prototype.getPrepositionvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.quotation.api.QuoteAdditional.prototype.setPrepositionvolume = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteContent.displayName = 'proto.quotation.api.QuoteContent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteContent.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basic: (f = msg.getBasic()) && proto.quotation.api.QuoteBasic.toObject(includeInstance, f),
    bidaskqueue: (f = msg.getBidaskqueue()) && proto.quotation.api.BidAskQueue.toObject(includeInstance, f),
    additional: (f = msg.getAdditional()) && proto.quotation.api.QuoteAdditional.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteContent}
 */
proto.quotation.api.QuoteContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteContent;
  return proto.quotation.api.QuoteContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteContent}
 */
proto.quotation.api.QuoteContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = new proto.quotation.api.QuoteBasic;
      reader.readMessage(value,proto.quotation.api.QuoteBasic.deserializeBinaryFromReader);
      msg.setBasic(value);
      break;
    case 3:
      var value = new proto.quotation.api.BidAskQueue;
      reader.readMessage(value,proto.quotation.api.BidAskQueue.deserializeBinaryFromReader);
      msg.setBidaskqueue(value);
      break;
    case 4:
      var value = new proto.quotation.api.QuoteAdditional;
      reader.readMessage(value,proto.quotation.api.QuoteAdditional.deserializeBinaryFromReader);
      msg.setAdditional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasic();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quotation.api.QuoteBasic.serializeBinaryToWriter
    );
  }
  f = message.getBidaskqueue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.quotation.api.BidAskQueue.serializeBinaryToWriter
    );
  }
  f = message.getAdditional();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.quotation.api.QuoteAdditional.serializeBinaryToWriter
    );
  }
};


/**
 * optional string timestamp = 1;
 * @return {string}
 */
proto.quotation.api.QuoteContent.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.QuoteContent.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional QuoteBasic basic = 2;
 * @return {?proto.quotation.api.QuoteBasic}
 */
proto.quotation.api.QuoteContent.prototype.getBasic = function() {
  return /** @type{?proto.quotation.api.QuoteBasic} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.QuoteBasic, 2));
};


/** @param {?proto.quotation.api.QuoteBasic|undefined} value */
proto.quotation.api.QuoteContent.prototype.setBasic = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.quotation.api.QuoteContent.prototype.clearBasic = function() {
  this.setBasic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteContent.prototype.hasBasic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BidAskQueue bidAskQueue = 3;
 * @return {?proto.quotation.api.BidAskQueue}
 */
proto.quotation.api.QuoteContent.prototype.getBidaskqueue = function() {
  return /** @type{?proto.quotation.api.BidAskQueue} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.BidAskQueue, 3));
};


/** @param {?proto.quotation.api.BidAskQueue|undefined} value */
proto.quotation.api.QuoteContent.prototype.setBidaskqueue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.quotation.api.QuoteContent.prototype.clearBidaskqueue = function() {
  this.setBidaskqueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteContent.prototype.hasBidaskqueue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QuoteAdditional additional = 4;
 * @return {?proto.quotation.api.QuoteAdditional}
 */
proto.quotation.api.QuoteContent.prototype.getAdditional = function() {
  return /** @type{?proto.quotation.api.QuoteAdditional} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.QuoteAdditional, 4));
};


/** @param {?proto.quotation.api.QuoteAdditional|undefined} value */
proto.quotation.api.QuoteContent.prototype.setAdditional = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.quotation.api.QuoteContent.prototype.clearAdditional = function() {
  this.setAdditional(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteContent.prototype.hasAdditional = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.ListQuoteContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.ListQuoteContent.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.ListQuoteContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.ListQuoteContent.displayName = 'proto.quotation.api.ListQuoteContent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.ListQuoteContent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.ListQuoteContent.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.ListQuoteContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.ListQuoteContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.ListQuoteContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, ""),
    listcontentList: jspb.Message.toObjectList(msg.getListcontentList(),
    proto.quotation.api.QuoteContent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.ListQuoteContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.ListQuoteContent;
  return proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.ListQuoteContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    case 5:
      var value = new proto.quotation.api.QuoteContent;
      reader.readMessage(value,proto.quotation.api.QuoteContent.deserializeBinaryFromReader);
      msg.addListcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.ListQuoteContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.ListQuoteContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.ListQuoteContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.ListQuoteContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getListcontentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.quotation.api.QuoteContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.ListQuoteContent.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.ListQuoteContent.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated QuoteContent listContent = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.QuoteContent>}
 */
proto.quotation.api.ListQuoteContent.prototype.getListcontentList = function() {
  return /** @type{!Array.<!proto.quotation.api.QuoteContent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.QuoteContent, 5));
};


/** @param {!Array.<!proto.quotation.api.QuoteContent>} value */
proto.quotation.api.ListQuoteContent.prototype.setListcontentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.quotation.api.QuoteContent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.QuoteContent}
 */
proto.quotation.api.ListQuoteContent.prototype.addListcontent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.quotation.api.QuoteContent, opt_index);
};


proto.quotation.api.ListQuoteContent.prototype.clearListcontentList = function() {
  this.setListcontentList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.SubQuoteDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteDetailRequest.displayName = 'proto.quotation.api.SubQuoteDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteDetailRequest}
 */
proto.quotation.api.SubQuoteDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteDetailRequest;
  return proto.quotation.api.SubQuoteDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteDetailRequest}
 */
proto.quotation.api.SubQuoteDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.SubQuoteDetailRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.SubQuoteDetailRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.SubQuoteDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteDetailResponse.displayName = 'proto.quotation.api.SubQuoteDetailResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    quotation: (f = msg.getQuotation()) && proto.quotation.api.ListQuoteContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteDetailResponse}
 */
proto.quotation.api.SubQuoteDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteDetailResponse;
  return proto.quotation.api.SubQuoteDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteDetailResponse}
 */
proto.quotation.api.SubQuoteDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.quotation.api.ListQuoteContent;
      reader.readMessage(value,proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader);
      msg.setQuotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getQuotation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quotation.api.ListQuoteContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.SubQuoteDetailResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.SubQuoteDetailResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListQuoteContent quotation = 2;
 * @return {?proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.getQuotation = function() {
  return /** @type{?proto.quotation.api.ListQuoteContent} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.ListQuoteContent, 2));
};


/** @param {?proto.quotation.api.ListQuoteContent|undefined} value */
proto.quotation.api.SubQuoteDetailResponse.prototype.setQuotation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.quotation.api.SubQuoteDetailResponse.prototype.clearQuotation = function() {
  this.setQuotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.SubQuoteDetailResponse.prototype.hasQuotation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteDetailRequest.displayName = 'proto.quotation.api.UnsubQuoteDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangeno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commodityno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commoditytype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteDetailRequest}
 */
proto.quotation.api.UnsubQuoteDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteDetailRequest;
  return proto.quotation.api.UnsubQuoteDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteDetailRequest}
 */
proto.quotation.api.UnsubQuoteDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommodityno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommoditytype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangeno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommodityno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommoditytype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string exchangeNo = 1;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getExchangeno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setExchangeno = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string commodityNo = 2;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getCommodityno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setCommodityno = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string commodityType = 3;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getCommoditytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setCommoditytype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractNo = 4;
 * @return {string}
 */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.getContractno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.quotation.api.UnsubQuoteDetailRequest.prototype.setContractno = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteDetailResponse.displayName = 'proto.quotation.api.UnsubQuoteDetailResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteDetailResponse}
 */
proto.quotation.api.UnsubQuoteDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteDetailResponse;
  return proto.quotation.api.UnsubQuoteDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteDetailResponse}
 */
proto.quotation.api.UnsubQuoteDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.UnsubQuoteDetailResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.UnsubQuoteDetailResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteBookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteBookRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteBookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteBookRequest.displayName = 'proto.quotation.api.SubQuoteBookRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteBookRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteBookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteBookRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteBookRequest}
 */
proto.quotation.api.SubQuoteBookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteBookRequest;
  return proto.quotation.api.SubQuoteBookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteBookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteBookRequest}
 */
proto.quotation.api.SubQuoteBookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteBookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteBookRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteBookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.SubQuoteBookRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.SubQuoteBookRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.SubQuoteBookRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.QuoteTip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quotation.api.QuoteTip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.QuoteTip.displayName = 'proto.quotation.api.QuoteTip';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.QuoteTip.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.QuoteTip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.QuoteTip} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.QuoteTip.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.quotation.api.Result.toObject(includeInstance, f),
    listquotecontent: (f = msg.getListquotecontent()) && proto.quotation.api.ListQuoteContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.QuoteTip}
 */
proto.quotation.api.QuoteTip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.QuoteTip;
  return proto.quotation.api.QuoteTip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.QuoteTip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.QuoteTip}
 */
proto.quotation.api.QuoteTip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.Result;
      reader.readMessage(value,proto.quotation.api.Result.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.quotation.api.ListQuoteContent;
      reader.readMessage(value,proto.quotation.api.ListQuoteContent.deserializeBinaryFromReader);
      msg.setListquotecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.QuoteTip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.QuoteTip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.QuoteTip} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.QuoteTip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quotation.api.Result.serializeBinaryToWriter
    );
  }
  f = message.getListquotecontent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quotation.api.ListQuoteContent.serializeBinaryToWriter
    );
  }
};


/**
 * optional Result result = 1;
 * @return {?proto.quotation.api.Result}
 */
proto.quotation.api.QuoteTip.prototype.getResult = function() {
  return /** @type{?proto.quotation.api.Result} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.Result, 1));
};


/** @param {?proto.quotation.api.Result|undefined} value */
proto.quotation.api.QuoteTip.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.quotation.api.QuoteTip.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteTip.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListQuoteContent listQuoteContent = 2;
 * @return {?proto.quotation.api.ListQuoteContent}
 */
proto.quotation.api.QuoteTip.prototype.getListquotecontent = function() {
  return /** @type{?proto.quotation.api.ListQuoteContent} */ (
    jspb.Message.getWrapperField(this, proto.quotation.api.ListQuoteContent, 2));
};


/** @param {?proto.quotation.api.ListQuoteContent|undefined} value */
proto.quotation.api.QuoteTip.prototype.setListquotecontent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.quotation.api.QuoteTip.prototype.clearListquotecontent = function() {
  this.setListquotecontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.quotation.api.QuoteTip.prototype.hasListquotecontent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.SubQuoteBookResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.SubQuoteBookResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.SubQuoteBookResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.SubQuoteBookResponse.displayName = 'proto.quotation.api.SubQuoteBookResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.SubQuoteBookResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.SubQuoteBookResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.SubQuoteBookResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.SubQuoteBookResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listquotetipList: jspb.Message.toObjectList(msg.getListquotetipList(),
    proto.quotation.api.QuoteTip.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.SubQuoteBookResponse}
 */
proto.quotation.api.SubQuoteBookResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.SubQuoteBookResponse;
  return proto.quotation.api.SubQuoteBookResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.SubQuoteBookResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.SubQuoteBookResponse}
 */
proto.quotation.api.SubQuoteBookResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.QuoteTip;
      reader.readMessage(value,proto.quotation.api.QuoteTip.deserializeBinaryFromReader);
      msg.addListquotetip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.SubQuoteBookResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.SubQuoteBookResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.SubQuoteBookResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListquotetipList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.QuoteTip.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QuoteTip listQuoteTip = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.QuoteTip>}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.getListquotetipList = function() {
  return /** @type{!Array.<!proto.quotation.api.QuoteTip>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.QuoteTip, 1));
};


/** @param {!Array.<!proto.quotation.api.QuoteTip>} value */
proto.quotation.api.SubQuoteBookResponse.prototype.setListquotetipList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.QuoteTip=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.QuoteTip}
 */
proto.quotation.api.SubQuoteBookResponse.prototype.addListquotetip = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.QuoteTip, opt_index);
};


proto.quotation.api.SubQuoteBookResponse.prototype.clearListquotetipList = function() {
  this.setListquotetipList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteBookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteBookRequest.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteBookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteBookRequest.displayName = 'proto.quotation.api.UnsubQuoteBookRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteBookRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteBookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteBookRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listcontractList: jspb.Message.toObjectList(msg.getListcontractList(),
    proto.quotation.api.ContractKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteBookRequest}
 */
proto.quotation.api.UnsubQuoteBookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteBookRequest;
  return proto.quotation.api.UnsubQuoteBookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteBookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteBookRequest}
 */
proto.quotation.api.UnsubQuoteBookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.ContractKey;
      reader.readMessage(value,proto.quotation.api.ContractKey.deserializeBinaryFromReader);
      msg.addListcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteBookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteBookRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteBookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListcontractList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.ContractKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContractKey listContract = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.ContractKey>}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.getListcontractList = function() {
  return /** @type{!Array.<!proto.quotation.api.ContractKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.ContractKey, 1));
};


/** @param {!Array.<!proto.quotation.api.ContractKey>} value */
proto.quotation.api.UnsubQuoteBookRequest.prototype.setListcontractList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.ContractKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.ContractKey}
 */
proto.quotation.api.UnsubQuoteBookRequest.prototype.addListcontract = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.ContractKey, opt_index);
};


proto.quotation.api.UnsubQuoteBookRequest.prototype.clearListcontractList = function() {
  this.setListcontractList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quotation.api.UnsubQuoteBookResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quotation.api.UnsubQuoteBookResponse.repeatedFields_, null);
};
goog.inherits(proto.quotation.api.UnsubQuoteBookResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.quotation.api.UnsubQuoteBookResponse.displayName = 'proto.quotation.api.UnsubQuoteBookResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quotation.api.UnsubQuoteBookResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quotation.api.UnsubQuoteBookResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quotation.api.UnsubQuoteBookResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.quotation.api.UnsubQuoteBookResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listresultList: jspb.Message.toObjectList(msg.getListresultList(),
    proto.quotation.api.UnsubResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quotation.api.UnsubQuoteBookResponse}
 */
proto.quotation.api.UnsubQuoteBookResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quotation.api.UnsubQuoteBookResponse;
  return proto.quotation.api.UnsubQuoteBookResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quotation.api.UnsubQuoteBookResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quotation.api.UnsubQuoteBookResponse}
 */
proto.quotation.api.UnsubQuoteBookResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quotation.api.UnsubResult;
      reader.readMessage(value,proto.quotation.api.UnsubResult.deserializeBinaryFromReader);
      msg.addListresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quotation.api.UnsubQuoteBookResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quotation.api.UnsubQuoteBookResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.quotation.api.UnsubQuoteBookResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quotation.api.UnsubResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnsubResult listResult = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.quotation.api.UnsubResult>}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.getListresultList = function() {
  return /** @type{!Array.<!proto.quotation.api.UnsubResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quotation.api.UnsubResult, 1));
};


/** @param {!Array.<!proto.quotation.api.UnsubResult>} value */
proto.quotation.api.UnsubQuoteBookResponse.prototype.setListresultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quotation.api.UnsubResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quotation.api.UnsubResult}
 */
proto.quotation.api.UnsubQuoteBookResponse.prototype.addListresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quotation.api.UnsubResult, opt_index);
};


proto.quotation.api.UnsubQuoteBookResponse.prototype.clearListresultList = function() {
  this.setListresultList([]);
};


